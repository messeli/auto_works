import time
startTime = time.time()
#|___222> IPS2 
#|___2_AAA> METHOD A : ~PURE AUTO 
#|___2A_DDD> DoubleLoop periodic solutions
#| Use Matlab-generated orbit at thetaP=2.91 once.
print("=====2A_DDD===CONTINUE_MATLAB_ORBIT")
l_dLoop_dat = load(
    e="ZilliCubic11_datFileContin_zeta_1e-2_doubleLoop",
    c="ZilliCubic11",
    dat="onePeriodCycle_ISO_rot_2p91_zeta_1e-2_doubleLoop",
    IPS=2, ICP=[2,11,9],
    UZSTOP={2:[0.01,7.01]}, 
    UZR={2:3.0}, 
    DS=+0.005, DSMAX=0.005, 
    NTST=50,
    EPSL= 1e-07, EPSU = 1e-07, EPSS =1e-4)
dLoop_dat = merge( run(l_dLoop_dat) +
                   run(l_dLoop_dat,DS="-") )

#| Vary zeta at one of the tips of the periodic orbit.
print("=====2A_DDD===CHANGE_ZETA")
l_dLoop_zeta = load(dLoop_dat('UZ1'),
    IPS=2, ICP=[6,11,9],
    UZR={6:[1e-5,0.0]}, 
    RL0=-0.001, 
    NTST=200, 
    DS=+0.001, DSMAX=0.001) 
    #|:Contin par6: zeta  #|1e-5 and 0.0 not sampled ??.

dLoop_zeta = merge( run(l_dLoop_zeta) +
                               run(l_dLoop_zeta,DS="-") )

dLoop_zeta.writeRawFilename("myASCIIoutputFile") #|Fail
myArray = dLoop_zeta.toArray()
print("!!!!!!!!!!!size of myArray is, ", len(myArray[0]), len(myArray) )

#| Run all different zetaOrbits made right above.
print("=====2A_DDD===DIFFERENT_ZETA_RUNS_STARTED")
counter = 0
for Z in dLoop_zeta('UZ'):
    counter+=1
    print( "=====2A_DDD===ZETA_RUN:",counter,"/",
           len(dLoop_zeta('UZ')) )
    try:
        IPS2 = IPS2 + run(Z,
            IPS=2,ICP=[2,11,9],
            DS=-0.005,DSMAX=0.005,
            UZR={2:[2.3045]},
            UZSTOP={2:[0.01,7.01]})
    except:
        IPS2 = run(Z,
            IPS=2,ICP=[2,11,9],
            DS=-0.005,DSMAX=0.005,
            UZR={2:[2.3045]},
            UZSTOP={2:[0.01,7.01]})


#|___2AD_EEE> eH-foldContinuation
print("=====EEE===eH-foldContinuation")
#| Load the fold continuation with run(), not load()
x = run(IPS2("LP1"),
    ICP=[5,2,11,9],
    ISW=2,
    NMX=2000,NTST=500, 
    RL0=0.09,RL1=1.0, # RL0=0.01
    UZR={5:[0.092,0.4]})  # UZR={5:[0.11,0.4]}) 

eH_fold = run(x)  # + run(x,DS="-")
plot(eH_fold,stability=True)

#| Family of sol form user point on eH-foldContinuation
print("=======EEE===Family of sol from user point on eH-foldContin")
y = load(eH_fold("UZ1"),    
    c='ZilliCubic11',
    IPS=2,ICP=[2,11,9],
    NTST=200,
    UZR={2:[1,2]},UZSTOP={2:[0.01,7.01]})

IPS2_new_eH = run(y) + run(y,DS="-")
IPS2 = IPS2 + IPS2_new_eH
#|___2AD_EEE.
#|___2A_DDD.
#|___2_AAA. METHOD A
#|___222. IPS2
###########

#|___HHH WHOLE DIAGRAM 
print("NOW=======HHH___RELABEL___PLOT___SAVE")
all_sideStudy1 = rl( eH_fold + IPS2 )
p=plot(all_sideStudy1,
    stability=True,
    bifurcation_x="Omeg",
    bifurcation_y="Amplitude",
    solution_x="u",
    solution_y="v",
    height=600)
p.config(color_list="black red green blue \
                     violet orange gray brown teal turquoise purple")
save(all_sideStudy1,"r_all_sideStudy1")

endTime = time.time()
elapsedTime = endTime-startTime
print( "=====FINISH___elapsedTime: ",
    elapsedTime," secs"," = ",
    elapsedTime/60, " mins" )
#|___HHH END WHOLE DIAGRAM