# parnames={
# 1:'gamma',
# 2:'Omeg',
# 3:'mH',
# 4:'JpH',
# 5:'epsH',
# 6:'zeta',
# 7:'OmegP',
# 8:'kappa',
# 9:'Amplitude',
# 10:"beta",
# 13:'K',
# 14:'KSI',
# 15:'RHO'}

#|>>|IPS2_DL|>> 

###<CONTROLS>###
isOnCubic = True
################

l_dLoop_dat = load(
	e="eqs/ZilliCubic11_datFileContin_zeta_1e-2_doubleLoop",     # .f90
	dat="dats/onePeriodCycle_ISO_rot_2p91_zeta_1e-2_doubleLoop",  # .dat
	c="ZilliCubic11", 
	IPS=2, ICP=[2,11,9,6], #Print par6 = zeta |#par5=epsH 
	UZR={2:[3,4,5,6]},RL0=0,RL1=10.01,NMX=5000, # UZR={2:np.append(3.6,np.arange(2,7,0.25))},  
	NTST=200,DS=+0.01,DSMAX=0.01,EPSL= 1e-06,EPSU=1e-06,EPSS=1e-4);
dLoop_dat = merge( run(l_dLoop_dat) + run(l_dLoop_dat,DS="-") ) #|Solution family from .dat
dLoop_cubic = dLoop_dat #|Change name for clarity
IPS2 = dLoop_cubic #|Start Populating the bifurcation plot.
plot(dLoop_cubic,top_title="dLoop_cubic",stability=True,height=600,bifurcation_x="Omeg",bifurcation_y="Amplitude",solution_x="u",solution_y="v")



if isOnCubic:

	# #| DL_cubic epsH-zeta plane 
	# try: #fold contin, if it issues free() error 
	# 	for L in dLoop_cubic("LP"):
			
	# 		l_dLoop_cubic_zetaEpsH = run(L,
	# 			IPS=2,ICP=[5,6,11,9],ISW=2,
	# 			UZSTOP={5:0.02},RL0=0.0,RL1=2.5,NMX=10000,NPR=5)
	# 		dLoop_cubic_zetaEpsH = run(l_dLoop_cubic_zetaEpsH)+run(l_dLoop_cubic_zetaEpsH,DS="-") 
			
	# 		plot(dLoop_cubic_zetaEpsH)

	# except: 
	# 	print(">>> ERROR : Fold contin attempt issued the free() error")


	#| DL_cubic zeta contin and sample
	DL_cubic_zeta = [] 
	for X in dLoop_cubic("UZ"):
		print("=====================================================DIAGNOSTIC[1]")
		l_DL_cubic_zeta = load(X,
			IPS=2,ICP=[6,11,9],
			UZ={6:[1e-5,1e-4,1e-3,0.02,0.05,0.08]},UZSTOP={6:10},RL0=-0.01,RL1=0.1,NMX=1000,NPR=1000
			)
		DL_cubic_zeta += merge(run(l_DL_cubic_zeta) + run(l_DL_cubic_zeta,DL="-"))
	
	#| DL_cubic epsH contin from the sampled zeta contin, and sample
	DL_cubic_zeta_epsH = [] 
	for Y in DL_cubic_zeta("UZ"): 
		
		l_DL_cubic_zeta_epsH = load(Y,
			IPS=2,ICP=[5,11,9,2,6],
			UZSTOP={5:[0.353,0.8,0.9,1.5]},RL0=0.0,RL1=2.0,NMX=1000,NPR=1000
			)
		DL_cubic_zeta_epsH += run(l_DL_cubic_zeta_epsH) + run(l_DL_cubic_zeta_epsH,DS="-")

	plot(DL_cubic_zeta_epsH,bifurcation_x="Omeg",bifurcation_y="zeta",bifurcation_z="epsH",stability=True)



else: #if isOnTanhContacts:
	#| Homotopy to newNonlin with kappa=0>1 OR rho=0>1 for tanh OR quintic, respectively (par8 OR par15)
	count = 0 
	size = len(dLoop_cubic("UZ"))
	for Z in dLoop_cubic("UZ"):
		count+=1
		print("===DIAGNOSTIC===IPS2_A_KAPPA_DL===Homotopy2newNonlin=",count,"/",size,)
		# if count>=2: break
		dLoop_homot = []
		
		try:		
			l_dLoop_homot = load(Z,
				IPS=2, ICP=[8,11,9,2], # In d case of RHO(quintic): IPS=2, ICP=[15,11,9],
				UZR={8:[1.0]},RL1=1.01,NMX=5000, #|NMX=60000 | UZR={8:[1.0,0.985]} | UZR={15:[0.987]}, | UZSTOP={15:[1.0]}
				NTST=200,DS=0.001,DSMAX=0.01) 
			dLoop_homot += merge( run(l_dLoop_homot) + run(l_dLoop_homot,DS="-") )
			
			if len(dLoop_homot("UZ")):
				break

		except:
			continue

	plot(dLoop_homot,top_title="dLoop_homot",stability=True,height=600,bifurcation_y="Amplitude",solution_x="u",solution_y="v")

	#| SolFam of dLoop with newNonlin
	count = 0
	size = len(dLoop_homot('UZ'))
	dLoop_newNonlin = []
	for X in dLoop_homot("UZ"):
		count+=1 
		print("===DIAGNOSTIC===IPS2_A_KAPPA_DL===newNonlinSolFam=",count,"/",size,)
		if count>=2: break
		
		try: #|this try could be unnecessary
			
			l_dLoop_newNonlin = load(X,  #'UZ1'
				IPS=2,ICP=[2,11,9,8],NPR=1000,
				UZR={2:9.5},RL0=0,RL1=10.1,NMX=10000,
				NTST=300,DS=-0.001,DSMAX=0.01) #|NEW SAMPLING FOR CONTACT STEEPNESS INCREASE, K.
			dLoop_newNonlin += run(l_dLoop_newNonlin) #+run(l_dLoop_newNonlin,DS="-") #merge()
			
			if len(dLoop_newNonlin):
				break
		except: 
			continue
	
	plot(dLoop_newNonlin,top_title="dLoop_newNonlin before epsH change",stability=True,height=600,bifurcation_y="Amplitude",solution_x="u",solution_y="v")
	#save(dLoop_newNonlin, "dLoop_newNonlin") 

	#| DL_newNonlin epsH-zeta plane 
	for L in dLoop_newNonlin("LP"):
		
		l_dLoop_newNonlin_zetaEpsH = run(L,
			IPS=2,ICP=[5,6,11,9],ISW=2,
			UZSTOP={5:0.01},RL0=0.0,RL1=3.5,NMX=10000,NPR=5)
		dLoop_newNonlin_zetaEpsH = run(l_dLoop_newNonlin_zetaEpsH)+run(l_dLoop_newNonlin_zetaEpsH,DS="-") 
		
		plot(dLoop_newNonlin_zetaEpsH)