#| EXTREME COMMENTING LEGEND - self explained: 
#| 00  "# "        - commentD line, as depot or an option of code
#| 01  "#| "       - comment describJ d followJ lines
#| 02  "#|"        - comment at d end f a line
#| 03  "#|:"       - comment fr d above line
#| 04  "#| :"      - indentaTn f ":" says dt dss d explanaTn f "#| "
#| 05  "#|::"      - explanaTn f an explanaTn f sort "#|:"
#| 06  "#|Nt:"     - note nt strictly relatD t precidJ line; deducTn
#| 07  "#|:Nt:"    - note strictly relatD t precidJ line: cd b deducTn
#| 08  "#|XXX>"    - block f code starts, also cl b "#|___XXX>"
#| 09  "#|X_YYY>"  - block f code under d block "XXX" :diff styles r implmnD
#| 10  "#|XY_ZZZ>" - block f code under d block "X_YYY"
#| 11  "#|XXX."    - block f code ends here, old versions:"XXX END"
#| 12  "#|..."     - continD frm ["#|:","#|::","#|Nt:","#|..."] or other
#| 13  "xxxYyyZzz" - term generatD onDspot, cd save space; cd b a var
#| 14  shortHands  - d:the | s:is | t:to | b:be | r:are | f:of | u:you 
#|                   ur:your | dnt: don't | dsnt: doesn't
#|                   ds:this | dt:that | dn:then or than
#|                   cn:can | cd:could | fr:for 
#|                   dss:this is | dts:that is   
#|                   verbD: verb3 | verbJ,G: -ing | Tn,Sn: -tion,-sion 
#|                   w/:with | w/o:without 
#|                   others...
#|
#|___EEE> Examples
#| See some examples 
#|...on 09.
#| :As dss a self-explainD legend
#| ::Self-explainD here means it has its examples in it.
#|___EEE. Examples
#|======================================================================

#| ZILLI CUBIC ROT (AUTONOMOUS - ISOTROPIC STIFFNESS) 
#| unames={1: 'u', 2: 'v',3:'u_dot' , 4:'v_dot'}
#| parnames={1:'gamma',2:'Omeg',3:'mH',4:'gamma2',5:'epsH',
#|           6:'zeta',7:'JpH',8:'OmegP',9:'Amplitude'}
#|:RecommD [EPSL,EPSU,EPSS] range is [1e-7,1e-7,1e-5]-[1e-6,1e-6,1e-3]

import time
startTime = time.time()


#|>>|IPS1|>> IPS=1 , zeta=0.01
print("============================================================ IPS1")


#|>>|IPS1_FORW|>> FORWARD: Cont mH:0-0.9>gamma:0-0.25>Omeg:0-7.0
print("============================================================ IPS1_FORW")
print("============================================================ IPS1_FORW : mH contin")

mH = run("ZilliCubic11") 


print("============================================================ IPS1_FORW : mH> gamma contin")

gam = run(mH("UZ1"),
    ICP=[1,9],
    UZSTOP={1:0.25},NMX=1000,
    DS=0.001,DSMAX=0.5) 


#| OPT  98yj3 Inc epsH to see if it makes the IPS2 sols join in a way !?
print("============================================================ IPS1_FORW : mH>gamma>epsH (98yj3 OPT is ON)")

if False: 
    eH = run(gam("UZ1"),
        ICP=[5,9],
        UZR={5:8.99e-1},UZSTOP={5:2.0},NMX=1000,
        DS=0.001,DSMAX=0.5) 
    gam = gam + eH
    plot(gam,bifurcation_x="epsH",bifurcation_y="Amplitude")


print("============================================================ IPS1_FORW : mH>gamma>epsH(98yj3)>Omeg . ")
forward = run(gam("UZ1"), #| if ~OPT 98yj3 : "UZ1"
    ICP=[2,9,5],
    UZSTOP={2:7},NMX=1000,
    DS=0.001,DSMAX=0.05)
#|__|IPS1_FORW|__



#|>>|IPS1_BACK|>> BACKWARDS (:lowAmp family) , W/ DIFFERENT ZETA
print("============================================================ IPS1_BACK")

#|>>|IPS1_BACK_A|>>  METHOD A: ~PURE AUTO: Once frm Matlab datum,dn zeta contin
print("============================================================ IPS1_BACK_A")


# OPT 0j9fd Increase epsH 
is_0j9fd = False
if is_0j9fd: 
    print("============================================================ IPS1_BACK_A : Matlab datum>epsH(0j9fd ON)")
    back = run(
        e="ZilliCubic11_givenBackwards_zeta_1e-2",
        c="ZilliCubic11",
        ICP=[5,9],
        NTST=50,
        DS=+0.01,DSMAX=0.05, 
        UZSTOP={5:0.899})
else: 
    print("============================================================ IPS1_BACK_A : Matlab datum>epsH(0j9fd OFF)")

print("============================================================ IPS1_BACK_A : Matlab>"+"epsH(0j9fd)>"*is_0j9fd+"Omeg")
if not(is_0j9fd) : back = []
back = back + run( 
    #back("UZ1"),                                 #  OPT 0j9fd 
    e="ZilliCubic11_givenBackwards_zeta_1e-2",    # ~OPT 0j9fd 
    c="ZilliCubic11",                             # ~OPT 0j9fd
    ICP=[2,9,5],
    UZR={2:7.0},UZSTOP={2:[0.01,7.01]},
    NTST=50,DS=-0.01,DSMAX=0.05, )


print("============================================================ IPS1_BACK_A : Matlab>"+"epsH(0j9fd)>"*is_0j9fd+"Omeg>zeta")
l_IPS1_zeta = load(
    # back("UZ1"),                                 #  OPT 0j9fd
    e="ZilliCubic11_givenBackwards_zeta_1e-2", # ~OPT 0j9fd
    c="ZilliCubic11",                          # ~OPT 0j9fd
    ICP=[6,9,2], # 2:omeg should be 7.0, with 9amp=0.9
    UZR={6:[8e-3,5e-3,1e-3,1e-4,1e-5, 0.02,0.03,0.05,0.70,0.10,0.15,0.20]},RL0=-0.001,NMX=500,
    NTST=150,DS=+0.001,DSMAX=0.001) #|Does not sample all the requested(UZR) zeta ??

IPS1_zeta = merge( run(l_IPS1_zeta) + run(l_IPS1_zeta,DS="-") )

plot(IPS1_zeta,stability=True,bifurcation_x="zeta",bifurcation_y="Amplitude",height=600)


print("============================================================ IPS1_BACK_A : Matlab>"+"epsH(0j9fd)>"*is_0j9fd+"Omeg>zeta>Omeg")
for zetaSample in IPS1_zeta('UZ'):
    back = back + run(zetaSample,
        ICP=[2,9,6],
        NTST=50,
        DS=-0.01,DSMAX=0.05,
        UZSTOP={2:[0.01,7.01]},
        ITNW=9,NWTN=5)

#|__|IPS1_BACK_A|__ METHOD A




#|>>|IPS1_BACK_B|>> METHOD B: All-MATLAB startPoints (ONLY for smaller zeta)
print("============================================================ IPS1_BACK_B : Matlabs_for_zeta>Omeg>")

# zetaList   = ["1e-2","8e-3","5e-3","1e-3","1e-4","1e-5"]
# eqFileName = ["ZilliCubic11_givenBackwards_zeta_"+x for x in zetaList]

# for i in range(0,len(zetaList)):
    # l_back = load(
    #             e=eqFileName[i],
    #             c="ZilliCubic11",
    #             ICP=[2,9],
    #             UZSTOP={2:[0.01,7.01]},
    #             NTST=50,DS=-0.05,DSMAX=0.05, EPSL=1e-6,EPSU=1e-6,EPSS=1e-3) 

#     try:    back = back + run(l_back)
#     except: back = run(l_back)

#|__|IPS1_BACK_B|__
#|__|IPS1_BACK|__


print("=====MERGE_FORW_&_BACK")
IPS1 = merge(forward + back)
plot(IPS1,stability=True,bifurcation_x="Omeg",bifurcation_y="Amplitude")

#|__|IPS1|__




#|>>|IPS2|>> IPS=2 
print("============================================================ IPS2")


#|>>|IPS2_A|>> METHOD A : ~PURE AUTO:Once Matlab dat, dn zeta contin 

#|>>|IPS2_A_SL|>> SingleLoop periodic solutions
print("============================================================ IPS2_A")


#| OPT y3dn1 Bfr anything, Inc epsH to see if it makes the IPS2 sols join in a way !?
is_y3dn1 = False
if is_y3dn1: 
    print("============================================================ IPS2_A_SL : Matlab orbit > epsH(y3dn1 ON)")

    l_sLoop_dat_initHomotInEpsH = load(
        e="ZilliCubic11_datFileContin_zeta_1e-2",
        c="ZilliCubic11",
        dat="onePeriodCycle_ISO_rot_4p05_zeta_1e-2",
        IPS=2,ICP=[5,11,9,6], # 2:'Omeg',5:'epsH',6:'zeta'
        UZR={5:0.899},UZSTOP={5:[8*0.353]},NMX=5000,
        NTST=200,DS=+0.001,DSMAX=0.005,EPSL=1e-07,EPSU=1e-07,EPSS=1e-4) # 6 6 3
        
    IPS2_sLoop = merge( run(l_sLoop_dat_initHomotInEpsH) + run(l_sLoop_dat_initHomotInEpsH,DS="-") )

    plot(IPS2_sLoop,stability=True,bifurcation_x="epsH",bifurcation_y="Amplitude",solution_x="u",solution_y="v")
else:
    print("============================================================ IPS2_A_SL : Matlab orbit > epsH(y3dn1 is OFF)")


#| Now Cont from where u left in epsH contin.
print("============================================================ IPS2_A_SL : Matlab >" + " epsH(y3dn1) >"*is_y3dn1 + " Omeg ")


l_sLoop_dat = load(
    #IPS2_sLoop("LP1"),                           #  OPT y3dn1
    e="ZilliCubic11_datFileContin_zeta_1e-2",  # ~OPT y3dn1
    c="ZilliCubic11",                          # ~OPT y3dn1
    dat="onePeriodCycle_ISO_rot_4p05_zeta_1e-2",
    IPS=2,ICP=[2,11,9,6,5],
    DS=+0.005,DSMAX=0.005, 
    UZSTOP={2:[0.01,7.01]}, 
    EPSL= 1e-07, EPSU = 1e-07, EPSS =1e-4, # 6 6 3
    NTST=200)

if not is_y3dn1 : IPS2_sLoop = []
IPS2_sLoop = IPS2_sLoop + merge( run(l_sLoop_dat) + 
              run(l_sLoop_dat,DS="-") )

#plot(IPS2_sLoop,stability=True,bifurcation_x="epsH",bifurcation_y="Amplitude",solution_x="u",solution_y="v")



#| Sample orbits at diff zeta in a contin frm a tip f d periodic orbit
print("============================================================ IPS2_A_SL : Matlab >" + " epsH(y3dn1) >"*is_y3dn1 + " Omeg >" + " zeta ")
l_sLoop_zeta = load(IPS2_sLoop('UZ1'),
    NMX=20000,
    IPS=2, ICP=[6,11,9,2,5],
    UZR={6:[8e-3,5e-3,1e-3,1e-5,0.00, 0.05,0.075,0.082,0.10,0.15,0.2]},RL0=-0.01,
    NTST=200,DS=+0.0005,DSMAX=0.0005) #|Continuation in zeta !!!)
    #|:(-) zetas give the same branches as positive ones.
    #|:Contin par6: zeta  #|1e-5 and 0.0 not sampled ??

sLoop_zeta = merge( run(l_sLoop_zeta) + run(l_sLoop_zeta,DS="-") )

save(sLoop_zeta,"sLoop_zeta")
plot(sLoop_zeta,stability=True,bifurcation_x="zeta",bifurcation_y="Amplitude",height=600)


#| Run all different zetaOrbits(:Z) made right above
print("============================================================ IPS2_A_SL : Matlab >" + " epsH(y3dn1) >"*is_y3dn1 + " Omeg >" + " zeta >" + " Omeg")
counter = 0
size = len(sLoop_zeta("UZ"))
for Z in sLoop_zeta('UZ'):
    counter+=1
    print("============================================================ IPS2_A_SL : Matlab >"+" epsH(y3dn1) >"*is_y3dn1+" Omeg >"+" zeta >"+" Omeg ",counter,"/",size )
    IPS2_sLoop = IPS2_sLoop + run(Z,
        IPS=2,ICP=[2,11,9,5,6],
        UZSTOP={2:[0.01,7.01]} ,
        NTST=200,DS=-0.005,DSMAX=0.005,EPSL=1e-7,EPSU=1e-7,EPSS=1e-4, )

try:    IPS2 = IPS2 + IPS2_sLoop
except: IPS2 = IPS2_sLoop
#|__|IPS2_A_SL|__



#|>>|IPS2_A_DL|>> DoubleLoop periodic solutions
print("============================================================ IPS2_A_DL")

#| OPT g120h8  Bfr anything, Inc epsH to see if it makes the IPS2 sols join in a way !?
is_g120h8 = False
if is_g120h8: 
    print("============================================================ IPS2_A_DL : Matlab orbit > epsH(g120h8)")

    l_dLoop_dat_initHomotInEpsH = load(
        e="ZilliCubic11_datFileContin_zeta_1e-2_doubleLoop",
        c="ZilliCubic11",
        dat="onePeriodCycle_ISO_rot_2p91_zeta_1e-2_doubleLoop",
        IPS=2,ICP=[5,11,9], # 2:'Omeg',5:'epsH',6:'zeta'
        DS=+0.001,DSMAX=0.005, 
        UZSTOP={5:[8*0.353]}, 
        EPSL= 1e-07, EPSU = 1e-07, EPSS =1e-4, # 6 6 3
        NTST=200)

    IPS2_dLoop = merge( run(l_dLoop_dat_initHomotInEpsH) + run(l_dLoop_dat_initHomotInEpsH,DS="-") )

    plot(IPS2_dLoop,stability=True,bifurcation_x="Omeg",bifurcation_y="Amplitude",solution_x="u",solution_y="v")


#| Now Cont from where u left in epsH contin.
print("============================================================ IPS2_A_DL : Matlab>"+"epsH(g120h8)>"*is_g120h8+"Omeg")

# eval(
# 'l_dLoop_dat = load( '
# +'IPS2_dLoop("LP1"), '*is_g120h8
# +'e="ZilliCubic11_datFileContin_zeta_1e-2_doubleLoop", '*bool(not(is_g120h8)) 
# +'c="ZilliCubic11", '*bool(not(is_g120h8)) 
# +'dat="onePeriodCycle_ISO_rot_2p91_zeta_1e-2_doubleLoop", '*bool(not(is_g120h8)) 
# +'IPS=2,ICP=[2,11,9,5], '
# +'UZR={2:3.0}, UZSTOP={2:[0.01,7.01]}, '
# +'NTST=200,DS=+0.005,DSMAX=0.005, EPSL= 1e-07, EPSU = 1e-07, EPSS =1e-4) ' )

l_dLoop_dat = load( 
    #IPS2_dLoop("LP1"), #g120h8
    e="ZilliCubic11_datFileContin_zeta_1e-2_doubleLoop",  #~g120h8
    c="ZilliCubic11",  #~g120h8
    dat="onePeriodCycle_ISO_rot_2p91_zeta_1e-2_doubleLoop", 
    IPS=2,ICP=[2,11,9,5,6], 
    UZR={2:3.0}, UZSTOP={2:[0.01,7.01]}, 
    NTST=200,DS=+0.005,DSMAX=0.005, EPSL= 1e-07, EPSU = 1e-07, EPSS =1e-4) 

IPS2_dLoop = merge( run(l_dLoop_dat) + run(l_dLoop_dat,DS="-") )


#| Vary zeta at one of the tips of the periodic orbit.
print("============================================================ IPS2_A_DL : Matlab>"+"epsH(g120h8)>"*is_g120h8+"Omeg>"+"zeta")
l_dLoop_zeta = load(IPS2_dLoop('UZ1'),
    IPS=2, ICP=[6,11,9,2,5],
    UZR={6:[8e-3,5e-3,1e-3,1e-4,1e-5, 0.00, 0.011,0.0116]},RL0=-0.001,
    NTST=200,DS=+0.001,DSMAX=0.001) #|zeta  1e-5 and 0.0 not sampled ??

dLoop_zeta = merge( run(l_dLoop_zeta) + run(l_dLoop_zeta,DS="-") )

save(dLoop_zeta,"dLoop_zeta")
plot(dLoop_zeta,stability=True,bifurcation_x="zeta",bifurcation_y="Amplitude",height=600)


#| Run all different zetaOrbits(:Z) made right above
print("============================================================ IPS2_A_DL : Matlab>"+"epsH(g120h8)>"*is_g120h8+"Omeg>"+"zeta>"+"Omeg")
size = len(dLoop_zeta("UZ"))
counter = 0

for Z in dLoop_zeta('UZ'):
    counter+=1
    print("============================================================ IPS2_A_DL : Matlab>"+"epsH(g120h8)>"*is_g120h8+"Omeg>"+"zeta>"+"Omeg",counter,"/",size ) 
    IPS2_dLoop = IPS2_dLoop + run(Z,
        IPS=2,ICP=[2,11,9,5,6],
        UZSTOP={2:[0.01,7.01]}, 
        NTST=200,DS=-0.005,DSMAX=0.005 ) # ITNW=9,NWTN=7,

try:    IPS2 = IPS2 + IPS2_dLoop
except: IPS2 =        IPS2_dLoop
#|__|IPS2_A_DL|__

#|__|IPS2_A|__



#|>>|IPS2_B|>> METHOD B : All-MATLAB startOrbits (ONLY for smaller zeta)
# print("=====2_BBB===METHOD_B")
# zetaList    = ["1e-2","8e-3","5e-3","1e-3","1e-4","1e-5"]
# datFileName = ["onePeriodCycle_ISO_rot_4p05_zeta_"+x for x in zetaList]\
#             + ["onePeriodCycle_ISO_rot_2p91_zeta_1e-2_doubleLoop"]
# eqFileName  = ["ZilliCubic11_datFileContin_zeta_" +x for x in zetaList]\
#             + ["ZilliCubic11_datFileContin_zeta_1e-2_doubleLoop"]
# #| Loop different zeta Matlab Orbits..
# for i in range(0,len(datFileName)):
#     l_sLoop_dat = load(
#         e=eqFileName[i],
#         c="ZilliCubic11",
#         dat=datFileName[i],
#         IPS=2,ICP=[2,11,9],
#         DS=+0.005,DSMAX=0.005, 
#         UZSTOP={2:[0.01,7.01]}, #|UZR={2:3.47}
#         NTST=200, 
#         EPSL= 1e-07, EPSU = 1e-07, EPSS =1e-4 ) # 6 6 3
 
#     if i >= len(zetaList)-1: #|zeta=1e-5 is d most diffic t converg
#     #| Increase max # f Newton-Chord iters, t b able t decrease tol
#         IPS2_sLoop = merge( run(l_sLoop_dat,ITNW=9,NWTN=7) + 
#                             run(l_sLoop_dat,ITNW=9,NWTN=7,DS="-") )
#     else:
#         IPS2_sLoop = merge( run(l_sLoop_dat) + 
#                             run(l_sLoop_dat,DS="-") )

#     try: 
#         IPS2 = IPS2 + IPS2_sLoop
#     except: #|If IPS2 is not defined.
#         IPS2 = IPS2_sLoop
#|__|IPS2_B|__ METHOD B


#|___2_000> SUM AND PLOT OF IPS=1 & IPS=2 WITH zeta=0.01
# plot(IPS1+IPS2,stability=True,
#     bifurcation_x="Omeg",bifurcation_y="Amplitude")  #all
#|:No foldCon data here. Relatively clean yet.
#|___2_000.


#|>>|IPS2_C|>> METHOD C: FOLD-CONTIN-IN-ZETA F FOLD-IN-Omeg 
# print("=====2_CCC===METHOD_C")
# #|:SEE plp demo for fold and hopfB continuation. 
# #| Use Matlab-generated orbit at Omeg=4.05 once.
# l_sLoop_dat = load(
#     e="ZilliCubic11_datFileContin_zeta_1e-2",
#     c="ZilliCubic11",
#     dat="onePeriodCycle_ISO_rot_4p05_zeta_1e-2",
#     IPS=2, ILP=1, ICP=[2,11,9], #|ILP=1 if subseq fold contin is intenD
#     DS=+0.005,DSMAX=0.005, 
#     UZSTOP={2:[0.01,7.01]},
#     EPSL= 1e-07, EPSU = 1e-07, EPSS =1e-4,
#     NTST=200)
# #|:RecommD [EPSL,EPSU,EPSS] = [1e-7,1e-7,1e-5]-to-[1e-6,1e-6,1e-3]

# IPS2_sLoop = merge( run(l_sLoop_dat) + 
#                     run(l_sLoop_dat,DS="-") )

# #| Continue the fold of periodic solution family.
# l_sLoop_zetaFold = run(  #|run() loads fold contin, not load() !
#     IPS2_sLoop('LP1'),
#     c='ZilliCubic11', 
#     IPS=2,ISW=2,ICP= [6,2,11,9], #|ISW=2 for fold contin
#     NTST=200,
#     NMX=5000,
#     DS=+0.001,DSMAX=0.005, #|THL={6:1,2:0.5} not makeJ zeta increase!??
#     UZR={6:[8e-3,5e-3,1e-3,1e-4,1e-5, 0.02,0.05,0.075,0.082]},
#     UZSTOP={6:[1e-5,0.2],2:[0,7.00]},
#     RL0=1.01e-3,RL1=0.2,
#     ITNW=7,NWTN=3)  #|The 0.0 not sampled ??.
# sLoop_zetaFold = merge( run(l_sLoop_zetaFold) + 
#                         run(l_sLoop_zetaFold,DS='-') ) 
# save(sLoop_zetaFold,"sLoop_zetaFold")
# # plot(sLoop_zetaFold,stability=True,
# #     bifurcation_x="Omeg",bifurcation_y="zeta")

# IPS2_sLoop = IPS2_sLoop + sLoop_zetaFold #|Uncomment fr clarity f d plot

# #| Continue from orbits of foldCon (corresponding to different zeta)
# for Z in sLoop_zetaFold('UZ'):
#     IPS2_further = load(Z,
#         c='ZilliCubic11',
#         NTST=200,
#         IPS=2,ICP= [2,11,9],ISW=1, #|ISW=1 is the normal already 
#         DS=+0.001,DSMAX=0.005, 
#         UZSTOP={2:[0.01,7.01]})
#     IPS2_sLoop = IPS2_sLoop + merge( run(IPS2_further)+
#                                      run(IPS2_further,DS="-") )

# try: #|For stand-alone Method-C. So you can uncommnt other methods
#     IPS2 = IPS2 + IPS2_sLoop
# except:
#     IPS2 = IPS2_sLoop
#|__|IPS2_C|__
#|__|IPS2|__ IPS2


#|___HHH WHOLE DIAGRAM 
print("=====HHH===RELABEL===PLOT===SAVE")
all = rl( IPS1 + IPS2 )
p=plot(all,stability=True,
    bifurcation_x="Omeg",bifurcation_y="Amplitude",height=600)
p.config(color_list="black red green blue \
                     violet orange gray brown teal turquoise purple")
p.config(solution_x="u",solution_y="v")
save(all,"all")
#|___HHH END WHOLE DIAGRAM

endTime = time.time()
elapsedTime = endTime-startTime
print("=====FINISH===elapsedTime: ",
    elapsedTime,    " sec"," | ", 
    elapsedTime/60, " min")
clean


#|___TTT> NOTES=========================================================
#|Nt: U dnt know d lable f UZR point:
#|...Dn check d vals f freq & amp (i.e PAR(2) & PAR(9)) from b.yyy file
#|...Dn locate d lable XXX. Say lable XXX=14 
#|...Now u know ur lable XXX.
#|...RegEx search in b.yyy file is "\n.{16}XXX" to find this lable back
#|...RegEx search in d.xxx file is "LAB.+\n.{16}XXX" to find the label
#|...:BUT DOES NOT FIND MOST OF THE LABLES IN d.xxx file 
#|...::I suppose rl() relabelG funcTn dsNt apply t d.xxx files ??
#|:Besides, STABLE points' PT number is NEGATIVE(opposite t doc)
#|___TTT. NOTES

#| Notes on Convergence. 
#|Nt:For difficult-convergence(:MX),
#|...1)Increas ITNW & NWTN :::9,7 (correction determination BN)  
#|...3)Decreas NTST (:accuracy)
#|...4)Increas EPSX (:tol) 
#|...2)Increas d 1st step size (DS) helps with covergnc at start.
#|Nt:IncreasJ DSMAX can help pass the difficult-specialPoint.

#|___JJJ> TEMPORARY NOTES:
#|Nt:singleLoop zetas on the AUTO bifur plot: 
#|...1e-2,8e-3,5e-3,1e-3,1e-4,1e-5, 0.01, 0.02,0.05,0.075,0.080,0.082
#|Nt:doubleLoop zetas on the AUTO bifur plot: 
#|...1e-2,8e-3,5e-3,1e-3,1e-4,1e-5, 0.01, 0.011,0.0116
#|___JJJ.