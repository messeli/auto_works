# parnames={
# 1:'gamma',
# 2:'Omeg',
# 3:'mH',
# 4:'JpH',
# 5:'epsH',
# 6:'zeta',
# 7:'OmegP',
# 8:'kappa', 
# 9:'Amplitude',
# 10:"beta",
# 13:'K',
# 14:'KSI',
# 15:'RHO'}

########IMPORTS###########
import time
import numpy as n
import re 
import matplotlib.pyplot as p #not used here, plot of auto is more convenient. 
########CONTROLS##########
isKappaContin  = True
isFoldContin   = False
##########################

startTime = time.time()
#|>>|IPS1|>>>IPS1
#|>>|IPS1_FORW|>> FORWARD: Cont mH:0-0.9>>gamma:0-0.25>>Omeg:0-7 >> Kappa:0-1>>beta:0-10>>K:0-100>>Omeg:0-7
shifts_with_bp = [] 
# for shift in n.arange(0,0.10,0.002): #n.arange(0,0.1,0.002) is done with samplings = n.arange(1.0+shift,10.0+shift,0.1)
for shift in range(0,1): #zero shift 
	try:
		# shift = 0.03 #up to 0.1 
		# samplings = n.arange(1.0+shift,10.0+shift,0.1) 
		samplings = 1.008 #ie exactly at branch point with JpH = 0.0143 (10 times lower than normal)

		# epsH = run( "ZilliCubic22",ICP=[5,11], UZSTOP={5:0.353},RL1=1.0,DS=1e-5,DSMAX=0.005,NMX=100000) #0.00002
		forward1 = run( "ZilliCubic22", ICP=[ 2,11,9,2,5,6], UZSTOP={2:0.1},NMX=100000, DS=0.01,DSMAX=0.1 ) #epsH("UZ1"), #|neeD fr tanh-contact
		forw = run(forward1("UZ1"), ICP=[2,11,9,2,5,6], UZR={2:samplings},UZSTOP={2:10}, NMX=10000, RL1=10.1, #UZR={2:[1.0,1.01,1.02,1.03,1.04,1.05,1.06,1.07,1.08,1.09,1.1]}
			NTST=200,DS=0.01,DSMAX=0.05, EPSL=1e-6,EPSU=1e-6,EPSS=1e-2, ITMX=8,ITNW=7,NWTN=3)

		plot(forw,top_title="forw"+str(shift),bifurcation_x="Omeg",bifurcation_y="Amplitude",stability=True,letter_symbols=False,bg="#a89d91") 
		#|__|IPS1_FORW|__

		#|>>|IPS_BACK|>> FROM LAST POINT OF HIGH DAMPING FORW CALC ABOVE
		## new   = run( forw("UZ1"), ICP=[ 5,9,13], UZSTOP={5:1.5} ) 
		## zeta = run(forw('UZ')[-1], ICP=[6,11,9,2,5,6],UZSTOP={6:[1e-10,0]},DS="-") # 1e-6
		# back = run(forw("UZ")[-1], ICP=[2,11,9,2,5,6],UZSTOP={2:[0.01,10.0]},DS=-0.01)  #zeta("UZ")[-1]
		# plot(forw+back,top_title="forw+back",bifurcation_x="Omeg",bifurcation_y="Amplitude",stability=True,bg="#a89d91")

		bp = []
		for BPoint in forw("BP"): bp += run(BPoint,ISW=-1,EPSL=3e-6,EPSU=3e-6)
		plot(forw+bp,top_title="back+bp",bifurcation_x="Omeg",bifurcation_y="Amplitude",stability=True) #,bg="#a89d91")
		print(bp[0])

		# bp_backbone=[]
		# for BPoint in bp("BP"): bp_backbone += run(BPoint,ISP=-1)

		# plot(bp+bp_backbone,top_title="bp+bp_backbone",bifurcation_x="Omeg",bifurcation_y="Amplitude",stability=True,bg="#a89d91")
		# #|__|IPS_BACK|__
		if forw("BP"): shifts_with_bp.append(shift) ; 
	except:
		pass
print("shifts_with_bp: ", shifts_with_bp) #|result is shifts_with_bp=[0.08,0.081]


#|>>|IPS1_BACK_B|>>  METHOD B: All-MATLAB startPoints (ONLY for smaller zeta)
# if True : 
# 	print("===DIAGNOSTIC===IPS1_BACK_B")
# 	zetaList   = ["1e-2"] #,"8e-3","5e-3","1e-3","1e-4","1e-5"]
# 	eqFileName = ["ZilliCubic11_givenBackwards_zeta_"+x for x in zetaList]
# 	for i in range(0,len(zetaList)):
# 		l_back = load(
# 			e=eqFileName[i],
# 			c="ZilliCubic11",
# 			ICP=[2,9],
# 			NMX=4000,RL0=0.01,RL1=10.0, #NMX=1000000
# 			NTST=200,DS=-0.01,DSMAX=0.01,EPSL= 1e-06,EPSU = 1e-06,EPSS =1e-4)
# 		back = merge( run(l_back) + run(l_back,DS='-') )
# 	#save(back,"back")
#|__|IPS1_BACK_B|__
#|__|IPS1_BACK|__
endTime = time.time()
print("                                >>>COMPLETED IN ",endTime-startTime, "sec <<<")
clean





#| OLDER CODE 
# ZILLI CUBIC STA (Independent stiffness)

# FORWARD: Cont mH, gamma, thetaP in order.
# r_mH = run("ZilliCubic2") # mH is PAR(3)
# r_gamma = run(r_mH("UZ1"),ICP=[1,11,9],NMX=1000,DS=0.001,DSMAX=0.05,UZSTOP={1:0.25})
# r_thetaP = run(r_gamma("UZ1"),ICP=[2,11,9],NMX=10000,DS=0.001,DSMAX=0.05,UZSTOP={2:2.0}) #,THL={11:0}
# save(r_thetaP,"r_thetaP")


